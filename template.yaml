AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Cognito User pool and client configuration example

Parameters:
  Env:
    Type: String
    Description: Logical sandbox prefix
    Default: val
    AllowedValues:
      - val
      - test
  App:
    Type: String
    Description: Application name
    Default: cognito-example

Globals:
  Function:
    Timeout: 3

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${Env}-user-pool
      Schema:
        - Name: email
          Required: true
          Mutable: true
      AutoVerifiedAttributes: ['email']
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 15
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolTags:
        Key: App
        Value: !Ref App

  UserClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${Env}-user-pool-client
      UserPoolId: !Ref UserPool
      AccessTokenValidity: 1
      IdTokenValidity: 1
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false

Outputs:
  PoolId:
    Description: User pool identifier
    Value: !Ref UserPool
  ClientId:
    Description: User pool client identifier
    Value: !Ref UserClient